
package ru.flibasta.server.books;

import java.util.List;
import java.util.concurrent.Future;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.AsyncHandler;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.Response;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.1
 * Generated source version: 3.0
 * 
 */
@WebService(name = "BookService", targetNamespace = "http://service.booksserver.flibasta.ru/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BooksService {


    /**
     * 
     * @param arg0
     * @return
     *     returns jakarta.xml.ws.Response<ru.flibasta.server.Books.SaveBookResponse>
     */
    @WebMethod(operationName = "saveBook")
    @RequestWrapper(localName = "saveBook", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.SaveBook")
    @ResponseWrapper(localName = "saveBookResponse", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.SaveBookResponse")
    public Response<SaveBookResponse> saveBookAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        Book arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "saveBook")
    @RequestWrapper(localName = "saveBook", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.SaveBook")
    @ResponseWrapper(localName = "saveBookResponse", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.SaveBookResponse")
    public Future<?> saveBookAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        Book arg0,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<SaveBookResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns ru.flibasta.server.books.Book
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saveBook", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.SaveBook")
    @ResponseWrapper(localName = "saveBookResponse", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.SaveBookResponse")
    public Book saveBook(
        @WebParam(name = "arg0", targetNamespace = "")
        Book arg0);

    /**
     * 
     * @return
     *     returns jakarta.xml.ws.Response<ru.flibasta.server.Books.GetAllBooksResponse>
     */
    @WebMethod(operationName = "getAllBooks")
    @RequestWrapper(localName = "getAllBooks", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.GetAllBooks")
    @ResponseWrapper(localName = "getAllBooksResponse", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.GetAllBooksResponse")
    public Response<GetAllBooksResponse> getAllBooksAsync();

    /**
     * 
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "getAllBooks")
    @RequestWrapper(localName = "getAllBooks", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.GetAllBooks")
    @ResponseWrapper(localName = "getAllBooksResponse", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.GetAllBooksResponse")
    public Future<?> getAllBooksAsync(
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetAllBooksResponse> asyncHandler);

    /**
     * 
     * @return
     *     returns java.util.List<ru.flibasta.server.Books.Book>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllBooks", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.GetAllBooks")
    @ResponseWrapper(localName = "getAllBooksResponse", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.GetAllBooksResponse")
    public List<Book> getAllBooks();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<ru.flibasta.server.Books.Book>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBookByTitle", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.GetBookByTitle")
    @ResponseWrapper(localName = "getBookByTitleResponse", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.GetBookByTitleResponse")
    public List<Book> getBookByTitle(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns ru.flibasta.server.Books.Book
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBookById", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.GetBookById")
    @ResponseWrapper(localName = "getBookByIdResponse", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.GetBookByIdResponse")
    public Book getBookById(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns ru.flibasta.server.Books.Book
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateBook", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.UpdateBook")
    @ResponseWrapper(localName = "updateBookResponse", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.UpdateBookResponse")
    public Book updateBook(
        @WebParam(name = "arg0", targetNamespace = "")
        Book arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteBook", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.DeleteBook")
    @ResponseWrapper(localName = "deleteBookResponse", targetNamespace = "http://service.booksserver.flibasta.ru/", className = "ru.flibasta.server.books.DeleteBookResponse")
    public void deleteBook(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0);

}
